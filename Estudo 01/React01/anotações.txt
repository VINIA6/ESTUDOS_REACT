* Entendendo o JSX:

O jsx é como um html, porém dentro do código JS
Podemos com ele interpolar variaveis, inserindo elas dentro de {},
também é possivel executar funções em jsx.

Obs 01: A função app é nossa função main digamos assim, tudo vai ser escrito dentro dela, vejamos.
Obs 02: Quando quisermos escrever alguma coisa de js dentro das tags html devemos escrever dentro de {LÓGICA}.
Obs 03: Podemos escrever funções dentro da função app.
Obs 04: Podemos fazer operações de atributo
-----------------------------------------------------------------------------
* Componentes:

Serve para dividir a aplicação em diversas partes, os componentes renderizados JSX, como por exemplo
App.js que é um componente, normalmente ficam em uma pasta chamada componentes, praticamente é uma forma de trabalho
em dividir os nossos codigos js que vão se comunicar através de importação/exportação.
-----------------------------------------------------------------------------
* Props:

São valores passados para os componentes, podemos deixalos dinâmicos, ou seja, mudando a execução por causa do valor prop.
É preciso ser resgatado dentro de uma porpriedade/argumento chamada ptrops na função de definição do componente
Outro recursos em props -> Podemos definir tipospara as props, realizando uma espécie de validação, podemos tbm definir em 
um objeto chamado prop types e ainda há a possibilidade de definir um valor padrão.

-----------------------------------------------------------------------------
* Eventos:
Os eventos de React são os mesmo ecentos do DOM, ou seja, temos eventos para responder a um click.
O evento é atrelado a uma tag que irá executa-lo, geralmente um método é atribuido ao evento, este método deve ser criado no componente.

-----------------------------------------------------------------------------
* UseState:
O useState é um hook do React, com ele conseguimos manusear o estado de um componente de forma simples, este hook funciona muito bem com eventos,
podemos atrelar um evento a mudanças de state.

Obs 05: Entendendo melhor um pouco de useState, basicamente ele vai pegar os valores gerado a partir de um evento e/ou guardar ou enviar para o backend

-----------------------------------------------------------------------------
* Métodos por props:
Os métodos também podem ser passados por props, ou seja, um componente filho pode ativar o método do seu ancestral
Vamos acessar o méotodo por meio de um evento, a sintaxe é a mesma de uma props de dados:props.meuEvento

-----------------------------------------------------------------------------
* Renderização por condicional:
Podemos atrelar a exibição de algum elemento a um if, esta ação é chamada de renderização condicional, encolvemos as tags em chaves{}
Como as chaves executam JS, criamos nossa condição, é possivel usar o state para criar as condições.